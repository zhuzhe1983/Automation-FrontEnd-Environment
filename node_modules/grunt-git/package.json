{
  "name": "grunt-git",
  "description": "Git commands for grunt.",
  "version": "0.0.1",
  "homepage": "https://github.com/rubenv/grunt-git",
  "author": {
    "name": "Ruben Vermeersch",
    "email": "ruben@savanne.be",
    "url": "http://savanne.be/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rubenv/grunt-git.git"
  },
  "bugs": {
    "url": "https://github.com/rubenv/grunt-git/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rubenv/grunt-git/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0",
    "grunt-mocha-cli": "~1.0.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-git\n\n> Git commands for grunt.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-git --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-git');\n```\n\n## The \"git\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `git` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  git: {\n    your_target: {\n      options: {\n        command: 'commit'\n        // Target-specific options go here.\n      }\n    }\n  },\n})\n```\n\nEach target defines a specific git task that can be run. The different available tasks are listed below.\n\n### Options\n\nEach git task accepts a different set of options. All targets require that you specify the `command` option.\n\n#### options.command\nType: `String`\nDefault value: `'commit`'\n\nThe git command you wish to execute.\n\nAvailable commands are:\n\n* `commit`\n\n### Usage Examples\n\n#### The `commit` command\nThis command commits the current working tree to git.\n\nCommit options:\n\n* `message`: Commit message\n* `files`: Files to commit\n\n```js\ngrunt.initConfig({\n    git: {\n        task: {\n            options: {\n                command: 'commit',\n                message: 'Testing'\n            },\n            files: {\n                src: ['test.txt']\n            }\n        }\n    },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* 2013-03-07   v0.0.1   Initial version, which commits files. No API stability or anything promised yet.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-git@0.0.1",
  "_from": "grunt-git@0.0.1"
}
